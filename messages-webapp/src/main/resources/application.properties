server.host=127.0.0.1
spring.security.oauth2.client.registration.messages-webapp.client-id=messages-webapp
spring.security.oauth2.client.registration.messages-webapp.client-secret=wpx57e75c59xEE2YKeQAaqrz4NuT1CFD
#spring.security.oauth2.client.registration.messages-webapp.client-secret={bcrypt}$2a$10$QfPQihyDx3yIhKMf1If7ruewl3LE2aJQsE99/fbR/YVtTIl2ehs4O
spring.security.oauth2.client.registration.messages-webapp.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.messages-webapp.scope=openid,profile,email
spring.security.oauth2.client.registration.messages-webapp.redirect-uri={baseUrl}/login/oauth2/code/messages-webapp

#spring.security.oauth2.client.provider.messages-webapp.issuer-uri=http://localhost:9191/realms/nrp
spring.security.oauth2.client.provider.messages-webapp.issuer-uri=http://localhost:9191
spring.security.oauth2.authorizationserver.client.client-1.token.access-token-time-to-live=3600s

# Commented below as these are automatically discovered by Spring Security Oauth 2.0 Client implementation using the 'issuer-uri'
# by invoking '{redirect-uri}/.well-known/openid-configuration'
#spring.security.oauth2.client.provider.messages-webapp.authorization-uri=http://localhost:9191/realms/nrp/protocol/openid-connect/auth
#spring.security.oauth2.client.provider.messages-webapp.token-uri=http://localhost:9191/realms/nrp/protocol/openid-connect/token
#spring.security.oauth2.client.provider.messages-webapp.jwk-set-uri=http://localhost:9191/realms/nrp/protocol/openid-connect/certs
#spring.security.oauth2.client.provider.messages-webapp.user-info-uri=http://localhost:9191/realms/nrp/protocol/openid-connect/userinfo

logging.level.org.springframework.security=DEBUG